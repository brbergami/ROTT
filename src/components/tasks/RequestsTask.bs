sub init()
    m.top.functionName = "createRequest"
    m.omdbApiUrl = "http://www.omdbapi.com/"
    m.omdb_api_key = m.top.getGlobalNode().globalVars.omdb_api_key ' Check this returning correct value
end sub

' Run the task from caller

' request AA format:
' request = {
'     "method": "GET",
'     "url": "https://", | Specifying the protocol for taking account of certificates
    ' "headers": {
'         "key1": "value1",
    ' },
'     "queryParams": {
'         "key1": "value1"
    ' }
sub createRequest() ' TBD: Add "POST" method
    urlTransfer = createObject("roUrlTransfer")
    ' Add params to the url
    formattedParams = "?"
    queryParamsKeys = m.top.request.queryParams.getKeys()
    for each queryKey in queryParamsKeys
        formattedParams = formattedParams + queryKey + "=" + m.top.request.queryParams[queryKey] + "&"
    end for
    ' Add headers to the request
    for each headerKey in m.top.request.headers.getKeys()
        urlTransfer.AddHeader(headerKey, m.top.request.headers[headerKey])
    end for
    urlTransfer.setUrl(m.top.request.url + formattedParams)
    responseCode = urlTransfer.getResponseCode()
    responseBodyObject = parseJson(urlTransfer.getToString())
    responseCode = urlTransfer.getResponseCode()
    responseBody = createObject("roSGNode", "omdbContentNode")
    responseBody.update(responseBodyObject, false)
    m.top.request = {}
    m.top.response = {
        responseBody: responseBody,
        responseCode: responseCode
    }
end sub
