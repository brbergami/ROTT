sub init()
    m.top.functionName = "createRequest"
    m.top.timeoutSeconds = 1 ' For POST requests, converts to milliseconds
end sub

' Request AA format ---------------------------------------
' {
'    "method": "GET",
'    "url": "https://", || Specify the full URL
'    "headers": {
'         "key1": "value1",
'    },
'     "params": {
'         "key1": "value1"
' }
' Response AA format ---------------------------------------
' {
'     responseCode: responseCode,
'     responseBody: responseBody
' }
' TBD: Use GetIdentity() as Integer to manage all the requests
sub createRequest()
    if m.top.request.count() = 0 then return
    urlTransfer = createObject("roUrlTransfer")
    urlTransfer.setRequest(m.top.request.method)
    params as String = ""
    responseBody as String = ""
    responseCode as Integer = 0
    for each param in m.top.request.params.items()
        paramKey = param.key
        paramValue =  param.value.encodeURI()
        params += `${paramKey}=${paramValue}&`
    end for
    ' GET  ------------------------------------------------------------------------------------
    if m.top.request.method = "GET"
        urlTransfer.setUrl(m.top.request.url + "?" + params)
        ' responseBody = parseJson(urlTransfer.asyncGetToString()) ' this should be handled with an event
        responseBody = parseJson(urlTransfer.getToString())
        ' responseCode = urlTransfer.getResponseCode() ' needs to be async
    ' POST  ------------------------------------------------------------------------------------
    else if m.top.request.method = "POST"
        encodedParams = formatJson(params)
        urlTransfer.setUrl(m.top.request.url)
        urlTransfer.setPort(createObject("roMessagePort"))
        urlTransfer.setRequest("Content-Type", "application/json")
        urlTransfer.asyncPostFromString(encodedParams)
        urlResponse = wait(m.top.timeoutSeconds * 1000, urlTransfer.getMessagePort())
        responseBody = urlResponse.getString()
        responseCode = urlResponse.getResponseCode()
    end if
    '   ------------------------------------------------------------------------------------
    m.top.request = {}
    m.top.response = {
        responseCode: responseCode,
        responseBody: responseBody
    }
end sub
